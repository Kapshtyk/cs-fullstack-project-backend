version: '3.8'

services:
  postgresql:
    image: postgres:latest
    restart: always
    container_name: ecommerce_postgresql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    restart: always
    container_name: ecommerce_redis
    volumes:
      - redis_data:/data

  backend:
    image: kapshtykas/ecommerce-backend:latest
    restart: always
    container_name: ecommerce_backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=ecommerce_postgresql;Port=5432;Database=postgres;Username=postgres;Password=postgres
      - Redis__ConnectionString=ecommerce_redis:6379
      - AuthSettings__PrivateKey=${JWT_PRIVATE_KEY}
      - AllowedOrigin=${ALLOWED_ORIGIN}
    depends_on:
      - postgresql
      - redis
    volumes:
      - backend_wwwroot:/app/wwwroot

  nginx:
    image: nginx:1.19.3
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    restart: always
    container_name: ecommerce_nginx
    depends_on:
      - postgresql
      - redis
      - backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Production

volumes:
  postgres_data:
  redis_data:
  backend_wwwroot: